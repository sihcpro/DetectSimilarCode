


2.4 Những công nghệ khác:

Thay cho việc sử dụng k-grams, nhận diện chuỗi fingerprint có thể đưọc chọn bởi việc tìm kiếm câu hoặc đoạn văn hoặc chọn những xâu có độ dài xác định mà bắt đầu với ( "anchor" words ) từ xác định bắt đầu 1 đoạn( chương). Những phiên bản đầu tiên của hệ thống của chúng tôi chỉ sử dụng cấu trúc đưọc lấy từ văn bản để chọn những chuỗi con fingerprint. Sự khó khăn với những chương trình như vậy, theo kinh nghiệm của chúng tôi, là sự thực hiện trở nên khá cụ thể cho 1 loại dữ liệu. Nếu theo văn bản Tiếng Anh, ví dụ, chọn vài câu như là đơn vị cho việc xây dựng bảng băm theo ngữ nghĩa tiếng Anh thì sau này sẽ khó hơn khi sử dụng cho hện thống fingerprint, như là chưong trình C, nó không giống những câu tiếng Anh. Thêm nữa, ngay cả khi trên bộ dữ liệu tổng hợp thì chưa chắc chắn 1 câu đã là một câu hợp lí: đầu vào có thể là 1 văn bản với 1 bảng lớn, 1 danh bạn, hoặc Joyce’s Finnegans Wake. Theo kinh nghiệm của chúng tôi, việc sử dụng k-grams như là đơn vi của việc băm thì mạnh hơn là dựa trên những trường hợp tương tự được tổng hợp từ số lần xuất hiện của 1 cấu trúc trong khi nhập.

Có nhiều cách tiếp cận để phát hiện sao chép mà không phụ thuộc vào fingerprinting. Như là ở SCAM, được biết đến 1 hện thống phát hiện sao chép, 1 trong những ý tưởng là cho rằng 2 văn bản là giống nhau nếu khoảng cách giữa những vector đặc trưng đại diện cho chúng là nhỏ. Những đặc trưng ở đây hiểu là những từ, và khái niệm về khoảng cách là mức độ biến đổi ( khác nhau) được tính bằng sự tính toán thông tin tương đồng. -  The features are words, and the notion of distance is a variation on standard information-retrieval measures of similarity

Baker xem xét rằng vấn đề tìm kiếm đoạn gần giống nhau( near-duplication ) trong 1 phần mềm và vấn đề biểu diễn khái niệm những tham số khớp nhau( parameterized matches), hoặc p-matches. Xem xét 2 xâu, vài từ của chúng đưọc chỉ định như là các tham số. 2 xâu khớp nhau nếu việc đổi tên tham số khiến cho chúng bằng nhau. Ví dụ, nếu chúng ta chọn những tham số là các tên biến, sau đó, 2 phần của mã chưong trình có thể được xem nhưng là bằng nhau nếu việc đổi tên các biến sẽ đưa chưong trình này thành chương trình  còn lại. Baker đưa ra 1 thuật toán để tính toán p-matches và đưa ra báo cáo về kinh nghiệm và cách cài đặt trong [2] và trong những trang sau xem xét làm sao để tích hợp những y tưởng đó và trong việc ghép k-grams [3].

Nó rất quan trọng trong sự phân biệt quá trình phát hiện sao chép giữa dữ liệu rời rạc và dữ liệu liên tục. Với dữ liệu rời rạc, như là những file văn bản và source chương trình, sau sự đàn áp( suppression ) đơn giản của những mảnh văn bản không không quan trọng, kết hợp chính xác trên từng xâu con còn lại là một khái niệm hữu ích. Với dữ liệu liên tục, như là dio, video và ảnh, chúng đã có một số hệ thống phát hiện bản sao thương mại được xây dựng nhưng tương đối ít đã được xuất bản trong tài liệu mở [13]. Vấn đề bây giờ trở nên khó hơn, bởi vì rất nhiều bản sao của các ảnh giống nhau, ví dụ, có thể có những chuỗi bit đại diện hoàn toàn khác nhau, cần một bước đầu tiên tinh vi hơn để trích xuất các tính năng tương tự trước khi kết hợp có thể được thực hiện.

Mở rộng ra từ phát hiện sao chép nhưng vẫn liên quan, đó là Digital Rights Management (DRM). Hệ thống DRM tìm kiểm để giải quyết vấn đề sở hữu trí tuệ bằng cách ngăn ngừa hoặc kiểm soát việc sao chép tài liệu. Kế hoạch DRM dựa trên sự mả hóa: nội dung có gía trị đưọc bảo vệ bằng mã hóa nó và chỉ có thể được dùng bởi những ngưòi được cấp phép dưới dạng khóa giải mã. Tuy nhiên, bất kể công nghệ phòng ngừa sao chép nào đưọc chọn, phải có những người dùng cuối cùng có quyền truy cập vào các tài liệu không được bảo mật bằng cách nào đó - không thì họ không thể sử dụng chúng - và như đã nói đến ở Phần 1, nó gióng như một điều luật tự nhiên mà nội dung số đưọc sao chép. Chúng ta tìm ra bản thân mình trong thỏa thuận về [4]: cho ít nhất một vài kiểu hệ thống ngăn chặn sao chép truyền thông số sẽ gặp khó khăn trong việc đạt thành công cuối cùng. Chúng tôi nghi ngờ rằng trong một vài môi trường, điều tốt nhất mọi người có thể hi vọng là một một chưong trình phát hiện sao chép hiệu quả.


3. WINNOWING

Trong phần này, chúng ta miêu tả và phân tích thuật toán winnowing để chọn fingerprints từ những bảng băm của k-grams. Chúng ta cho 1 ràng buộc trên về hiệu quả của winnowing, được biểu hiện bằng sự cân bằng giữa số lưọng fingerprints phải được chọn và phần khớp ngắn nhất mà chúng tôi đã đảm bảo được phát hiện.

Cho 1 tập các văn bản, chúng tôi muốn tìm những xâu con phù hợp mà giữa chúng thỏa mãn 2 tính chất:

1. Nếu có 1 xâu con khớp dài tối thiểu bằng ngưỡng được đảm bảo ( guarantee threshold), t, thì sự khớp này được nhận ra.
2. Chúng tôi không nhận ra bất cứ khớp nào ngắn hơn ngưỡng nhiễu ( noise threshold), k.

Hằng số t và k <= t là được chọn bởi người dùng. Chúng tôi tránh việc khớp những xâu dưới ngưỡng nhiễu bằng việc xem xét chỉ những băm của k-grams. k càn lớn, chúng ta càng khẳng định những điểm khớp giữa các văn bản không phải là tình cờ. Mặt khác, gía trị của k càng lớn cũng giới hạn sự nhạy cảm đối với việc nội dung bị sắp xếp lại, nên chúng ta không thể phát hiện những sự đổi chổ trong những xâu con có độ dài nhỏ hơn k. Do đó, nó rất là quan trọng để chọn k để giảm tối đa gía trị mà bị loại bỏ do trùng hợp ngẫu nhiên( xem ở phần 5).

Những số liệu 2(a)-(d) được chép lại từ số liệu 1 để tiện và cho thấy một dãy băm của 5-grams có nguồn gốc từ vài đoạn mẫu.

Cho 1 chuỗi các băm h1..hn, nếu n > (t-k), thì ít nhất 1 trong hi phải được chọn để đảm bảo phát hiện cho tất cả những chuỗi khớp có độ dài ít nhất là t. Từ đó cho thấy cách tiếp cận đơn gỉan sau. cho kích thước khung( window size) bằng w = t-k+1. Xem xét chuỗi băm h1h2...hn mà nó đại diện cho 1 văn bản. Tại mỗi vị trí 1 <= i <= n-w+1 trong chuỗi xác định 1 khung của các hash hi...h(i+w-1). Để duy trì sự đảm bảo thì nó cần chọn gía trị 1 hash từ mọi khung để trở thành fingerprint cho đoạn văn. (Điều này cũng đủ, xem ở Lemma 1). Trong thực tế, chúng ta đã tìm ra những chiến lược là việc tốt sau.

DEFINITION 1 (WINNOWING). Trong mỗi khung chọn gía trị băm nhỏ nhất. Nếu có nhiều hơn 1 băm với gía trị nhỏ nhất, chọn cái bên phải nhất. Giờ lưu tất cả những băm đã được chọn như là những fingerprints của văn bản.

Số liệu 2(e) cho những khung có độ dài bằng 4 của chuỗi các băm từ số liệu 2(d). Mỗi băm mà được chọn thì được biểu diễn in đậm( nhưng chỉ 1 lần, trong khung đầu tiên chọn băm đó). Trực giác đằng sau việc chọn băm nhỏ nhất là cái băm nhỏ nhất trong 1 khung rất giống với băm nhỏ nhất trong khung bên cạnh, bởi vì những tỉ lệ mà số ngẫu nhiên w nhỏ nhất là nhỏ hơn một số ngẫu nhiên được thêm vào( since the odds are that the minimum of w random numbers is smaller than one additional random number). Do đó, nhiều những khung chồng lên nhau chọn cùng một băm, và số lưọng fingerprint đã chọn thì xem ra nhỏ hơn số lượng số lượng khung trong khi vẫn chứa gía trị đảm bảo. Số liệu 2(f) cho thấy tập fingerprint đã chọn bởi winnowing trong ví dụ.

Trong nhiều ứng dụng nó có ích trong việc lưu lại không chỉ fingerprint của 1 văn bản mà còn vị trí của các fingerprint trong văn bản. Ví dụ, chúng ta cần vị trí của thông tin để thể hiện độ khớp nhau của xâu con trong 1 giao diện người dùng. Một sự phát triển hiệu quả của winnowing  cũng cần gĩư lại vị trí của fingerprint đưọc chọn gần nhất. Số liệu 2(g) cho thấy tập của những cặp ơfingerprint, vị trí] như ví dụ( vị trí đầu được tính từ 0). Để tránh làm phức tạp của việc đánh chỉ mục cho tất băm với vị trí của nó trong chuỗi băm tổng thể với k-grams trong 1 văn bản, chúng tôi bỏ qua hầu hết sự liên quan đến vị trí của k-grams trong văn bản trong bài thuyết trình của chúng tôi.


3.1 Expected Density ( Mật độ kì vọng)

Nhắc lại rằng mật độ kì vọng của một fingerprinting algorithm là phần kì vọng của fingerprints được chọn trong số tất cả các gía trị bảng ghi đã được tính, cho gía trị vào random(Section 1). Chúng ta bắt đầu phân tích tỉ trọng của winnowing ngay bây giờ, điều đó sữ đưa ra sự cân bằng giữa ngưỡng đảm bảo và số lượng vân tay yêu cầu.

Xem xét chương trình C mà ánh xạ vị trí mỗi vân tay được chọn đến vị trí đầu( bên trái cùng) cửa sổ, cái cửa sổ mà đã chọn trong tất cả cửa sổ trong đọa văn bản( Consider the function C that maps the position of each selected fingerprint to the position of the first (leftmost) window that selected it in the sequence of all windows for a documen ). Chúng ta nói chúng ta đang thay lượng lưu lại dấu vân tay cho cửa sổ được chỉ định. Chương trình thay đổi là hàm tăng tuyến tính - nó là, nếu p và q là vị trí của 2 vân tay được chọn và p < q thì C(p) < C(p).

Để chứng minh điều này, gỉa thuyết những vân tay được chọn tại những vị trí phân biệt p và q với p < q nhưng C(p) > C(q). Thì cả 2 vị trí p và q là trong cùng khung. Cho hp là băm tại vị trí p và cho hq là băm tại vị trí q. Có 2 khả năng xảy ra: nếu hp == hq thì, vì p < q, khung C(p) không đưọc thay đổi với p và cũng không với q, vì C(q) < C(p). Nếu hp != hq thì một trong C(p) hoặc C(q) không được đổi. Cả 2 đều mâu thuẫn với gỉa thuyết. Chúng ta khẳng định rằng hàm thay đổi là hàm tăng tuyến tính.

Để tính tiếp tục xử lí sâu hơn nhắc cho chúng ta là chuỗi các băm mà chúng ta đang winnowing là ngẫu nhiên. Chúng ta gỉa thuyết là phần không gian của các gía trị băm là rất lớn vì thế chúng ta có hể bỏ qua một cách an toàn khả năng rằng nó có 1 sự hạn chế cho gía trị nhỏ nhất với bất kì khung nhỏ nào. Chúng tôi đã minh họa rõ ràng gỉa thuyết này ở chương 5.

Cân nhắc 1 biến random được chỉ định Xi mà là một nếu khung Wi thứ i được thay đổi. Xem xét khung liền kề phía bên trái Wi-1. Khoảng lặp lại ngoại trừ vị trí bên trái cùng và phải cùng. Sự liên tiếp của chúng là 1 khoảng có độ dài w+1. Xem xét vị trí p chứa băm nhỏ nhất trong khoảng liên tiếp đó. Bất cứ khungnaof mà nó chứa p chọn hp như là một dấu vân tay. Ta thấy có 3 trường hợp:

1. Nếu p = i-1, vị trí bên trái cùng trong chuỗi, thì Wi-1 chọn nhó. Bởi vì p không thuộc Wi, chúng ta biết rằng Wi phải chọn như là 1 băm trong vị trí khác, q. Băm này được thay đổi sang Wi vì Wi  chọn nó, Wi-1 đã không chọn nó, và chương trình đổi là hàm tuyến tính tăng dần. Nên trong trường hợp này, Xi = 1.

2.Nếu p=i+w-1, vị trí bên phải cùng trong chuỗi liên tiếp, thì Wi  chọn not. Wi phải được chọn cho nó. vì Wi cũng là vị trí bên trái cùng để chứa p. 1 lần nữa, Xi = 1.

3. Nếu p là một trong các điểm còn lại trong chuỗi liên tục, cả Wi-1 và Wi chọn nó. Không quan trọng ai được thay đổi hành nó, nó sẽ không là Wi , vì Wi-1 là liên tục bên trái và cũng chọn nó. Nên trong trường hợp này, Xi = 0.

2 trưòng hợp đầu tiên


